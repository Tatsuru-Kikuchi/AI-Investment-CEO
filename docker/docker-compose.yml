version: '3.8'

services:
  ai-investment-platform:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ai-investment-ceo
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - ../data:/app/data:ro
      - ../web:/app/web:ro
      - logs:/var/log
    environment:
      - ENV=production
      - DEBUG=false
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - ai-investment-network

  # Optional: Redis for caching (if needed for scaling)
  redis:
    image: redis:7-alpine
    container_name: ai-investment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - ai-investment-network

  # Optional: PostgreSQL for data storage (if needed)
  postgres:
    image: postgres:15-alpine
    container_name: ai-investment-postgres
    environment:
      POSTGRES_DB: ai_investment
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: secure_password_change_me
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../data:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - ai-investment-network

volumes:
  logs:
  redis-data:
  postgres-data:

networks:
  ai-investment-network:
    driver: bridge
    name: ai-investment-network